server:
  port: 9090
  shutdown: graceful
spring:
  application:
    name: auth-service
  profiles:
    active: development-sasha
  main:
    banner-mode: off
  data:
    jpa:
      repositories:
        enabled: true
  cloud:
    kubernetes:
      reload:
        enabled : true
        mode    : event
        strategy: refresh
      ribbon:
        enabled       : true
        cluster-domain: cluster.local
        mode          : service
management:
  endpoint:
    health :
      probes:
        enabled: true
    restart:
      enabled: true
    refresh:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,prometheus,info,shutdown,restart,refresh
      path-mapping:
        prometheus: metrics
      base-path: /
  metrics:
    tags:
      region: "BY"
      stack: ${spring.profiles.active}
      application: ${spring.application.name}
      instanceIp: ${spring.cloud.client.ip-address}
      instanceId: ${spring.cloud.client.ip-address}:${spring.application.name}:${spring.application.instance_id:${server.port}}
---
# Dev environment
spring:
  profiles: development-sasha
  datasource:
    hikari:
      driver-class-name: org.postgresql.Driver
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 60000
      max-lifetime: 180000
      leak-detection-threshold: 0
      jdbc-url: ${DBURL}
      username: auth_service
      password: "m6qrT)*Myk"
    url: ${DBURL}
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

#logging:
#  level:
#    org:
#      springframework:
#        security: DEBUG
