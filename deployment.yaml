apiVersion: v1
kind: ServiceAccount
metadata:
  name: auth-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: auth-service-cluster-role
  namespace: default
rules:
  - apiGroups:
      - ""
      - apps
      - autoscaling
      - batch
      - extensions
      - policy
      - rbac.authorization.k8s.io
    resources:
      - pods
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auth-service-cluster-role-binding
subjects:
  - namespace: default
    kind: ServiceAccount
    name: auth-service-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: auth-service-cluster-role
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
spec:
  ports:
  - port: 9090
    protocol: TCP
  selector:
    app: auth-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      serviceAccountName: auth-service-account
      containers:
      - name: auth-service
        image: dev/auth-service
        ports:
          - containerPort: 9090
        startupProbe:
          httpGet:
            path: health
            port: 9090
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: health/readiness
            port: 9090
          successThreshold: 3
        livenessProbe:
          httpGet:
            path: health/liveness
            port: 9090
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]